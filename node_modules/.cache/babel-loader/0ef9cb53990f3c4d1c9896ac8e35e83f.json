{"ast":null,"code":"// Generated by CoffeeScript 1.12.2\n(function () {\n  var ERROR_MSG,\n      EU_COUNTRIES_CODES,\n      exports,\n      getReadableErrorMsg,\n      headers,\n      http,\n      parseSoapResponse,\n      parsedUrl,\n      serviceUrl,\n      soapBodyTemplate,\n      url,\n      indexOf = [].indexOf || function (item) {\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (i in this && this[i] === item) return i;\n    }\n\n    return -1;\n  };\n\n  url = require('url');\n  http = require('http');\n  serviceUrl = 'http://ec.europa.eu/taxation_customs/vies/services/checkVatService';\n  parsedUrl = url.parse(serviceUrl);\n  soapBodyTemplate = '<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"\\n  xmlns:tns1=\"urn:ec.europa.eu:taxud:vies:services:checkVat:types\"\\n  xmlns:impl=\"urn:ec.europa.eu:taxud:vies:services:checkVat\">\\n  <soap:Header>\\n  </soap:Header>\\n  <soap:Body>\\n    <tns1:checkVat xmlns:tns1=\"urn:ec.europa.eu:taxud:vies:services:checkVat:types\"\\n     xmlns=\"urn:ec.europa.eu:taxud:vies:services:checkVat:types\">\\n     <tns1:countryCode>_country_code_placeholder_</tns1:countryCode>\\n     <tns1:vatNumber>_vat_number_placeholder_</tns1:vatNumber>\\n    </tns1:checkVat>\\n  </soap:Body>\\n</soap:Envelope>';\n  EU_COUNTRIES_CODES = ['AT', 'BE', 'BG', 'HR', 'CY', 'CZ', 'DK', 'EE', 'FI', 'FR', 'DE', 'EL', 'HU', 'IE', 'IT', 'LV', 'LT', 'LU', 'MT', 'NL', 'PL', 'PT', 'RO', 'SK', 'SI', 'ES', 'SE', 'GB'];\n  ERROR_MSG = {\n    'INVALID_INPUT': 'The provided CountryCode is invalid or the VAT number is empty',\n    'SERVICE_UNAVAILABLE': 'The VIES VAT service is unavailable, please try again later',\n    'MS_UNAVAILABLE': 'The VAT database of the requested member country is unavailable, please try again later',\n    'TIMEOUT': 'The request to VAT database of the requested member country has timed out, please try again later',\n    'SERVER_BUSY': 'The service cannot process your request, please try again later',\n    'UNKNOWN': 'Unknown error'\n  };\n  headers = {\n    'Content-Type': 'application/x-www-form-urlencoded',\n    'User-Agent': 'node-soap',\n    'Accept': 'text/html,application/xhtml+xml,application/xml,text/xml;q=0.9,*/*;q=0.8',\n    'Accept-Encoding': 'none',\n    'Accept-Charset': 'utf-8',\n    'Connection': 'close',\n    'Host': parsedUrl.hostname,\n    'SOAPAction': 'urn:ec.europa.eu:taxud:vies:services:checkVat/checkVat'\n  };\n\n  getReadableErrorMsg = function (faultstring) {\n    if (ERROR_MSG[faultstring] != null) {\n      return ERROR_MSG[faultstring];\n    } else {\n      return ERROR_MSG['UNKNOWN'];\n    }\n  };\n\n  parseSoapResponse = function (soapMessage) {\n    var hasFault, parseField, ret;\n\n    parseField = function (field) {\n      var err, match, regex;\n      regex = new RegExp(\"<\" + field + \">\\((\\.|\\\\s)\\*\\)</\" + field + \">\", 'gm');\n      match = regex.exec(soapMessage);\n\n      if (!match) {\n        err = new Error(\"Failed to parseField \" + field);\n        err.soapMessage = soapMessage;\n        throw err;\n      }\n\n      return match[1];\n    };\n\n    hasFault = soapMessage.match(/<soap:Fault>\\S+<\\/soap:Fault>/g);\n\n    if (hasFault) {\n      ret = {\n        faultCode: parseField('faultcode'),\n        faultString: parseField('faultstring')\n      };\n    } else {\n      ret = {\n        countryCode: parseField('countryCode'),\n        vatNumber: parseField('vatNumber'),\n        requestDate: parseField('requestDate'),\n        valid: parseField('valid') === 'true',\n        name: parseField('name'),\n        address: parseField('address').replace(/\\n/g, ', ')\n      };\n    }\n\n    return ret;\n  };\n\n  module.exports = exports = function (countryCode, vatNumber, timeout, callback) {\n    var options, req, xml;\n\n    if (typeof timeout === 'function') {\n      callback = timeout;\n      timeout = null;\n    }\n\n    if (indexOf.call(EU_COUNTRIES_CODES, countryCode) < 0 || !(vatNumber != null ? vatNumber.length : void 0)) {\n      return process.nextTick(function () {\n        return callback(new Error(ERROR_MSG['INVALID_INPUT']));\n      });\n    }\n\n    xml = soapBodyTemplate.replace('_country_code_placeholder_', countryCode).replace('_vat_number_placeholder_', vatNumber).replace('\\n', '').trim();\n    headers['Content-Length'] = Buffer.byteLength(xml, 'utf8');\n    options = {\n      host: parsedUrl.host,\n      method: 'POST',\n      path: parsedUrl.path,\n      headers: headers,\n      family: 4\n    };\n    req = http.request(options, function (res) {\n      var str;\n      res.setEncoding('utf8');\n      str = '';\n      res.on('data', function (chunk) {\n        return str += chunk;\n      });\n      return res.on('end', function () {\n        var data, err, ref;\n\n        try {\n          data = parseSoapResponse(str);\n        } catch (error) {\n          err = error;\n          return callback(err);\n        }\n\n        if ((ref = data.faultString) != null ? ref.length : void 0) {\n          err = new Error(getReadableErrorMsg(data.faultString));\n          err.code = data.faultCode;\n          return callback(err);\n        }\n\n        return callback(null, data);\n      });\n    });\n\n    if (timeout) {\n      req.setTimeout(timeout, function () {\n        return req.abort();\n      });\n    }\n\n    req.on('error', callback);\n    req.write(xml);\n    return req.end();\n  };\n}).call(this);","map":{"version":3,"sources":["/Users/vinceboogie/Development/DunderList/node_modules/validate-vat/lib/index.js"],"names":["ERROR_MSG","EU_COUNTRIES_CODES","exports","getReadableErrorMsg","headers","http","parseSoapResponse","parsedUrl","serviceUrl","soapBodyTemplate","url","indexOf","item","i","l","length","require","parse","hostname","faultstring","soapMessage","hasFault","parseField","ret","field","err","match","regex","RegExp","exec","Error","faultCode","faultString","countryCode","vatNumber","requestDate","valid","name","address","replace","module","timeout","callback","options","req","xml","call","process","nextTick","trim","Buffer","byteLength","host","method","path","family","request","res","str","setEncoding","on","chunk","data","ref","error","code","setTimeout","abort","write","end"],"mappings":"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","sourcesContent":["// Generated by CoffeeScript 1.12.2\n(function() {\n  var ERROR_MSG, EU_COUNTRIES_CODES, exports, getReadableErrorMsg, headers, http, parseSoapResponse, parsedUrl, serviceUrl, soapBodyTemplate, url,\n    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  url = require('url');\n\n  http = require('http');\n\n  serviceUrl = 'http://ec.europa.eu/taxation_customs/vies/services/checkVatService';\n\n  parsedUrl = url.parse(serviceUrl);\n\n  soapBodyTemplate = '<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"\\n  xmlns:tns1=\"urn:ec.europa.eu:taxud:vies:services:checkVat:types\"\\n  xmlns:impl=\"urn:ec.europa.eu:taxud:vies:services:checkVat\">\\n  <soap:Header>\\n  </soap:Header>\\n  <soap:Body>\\n    <tns1:checkVat xmlns:tns1=\"urn:ec.europa.eu:taxud:vies:services:checkVat:types\"\\n     xmlns=\"urn:ec.europa.eu:taxud:vies:services:checkVat:types\">\\n     <tns1:countryCode>_country_code_placeholder_</tns1:countryCode>\\n     <tns1:vatNumber>_vat_number_placeholder_</tns1:vatNumber>\\n    </tns1:checkVat>\\n  </soap:Body>\\n</soap:Envelope>';\n\n  EU_COUNTRIES_CODES = ['AT', 'BE', 'BG', 'HR', 'CY', 'CZ', 'DK', 'EE', 'FI', 'FR', 'DE', 'EL', 'HU', 'IE', 'IT', 'LV', 'LT', 'LU', 'MT', 'NL', 'PL', 'PT', 'RO', 'SK', 'SI', 'ES', 'SE', 'GB'];\n\n  ERROR_MSG = {\n    'INVALID_INPUT': 'The provided CountryCode is invalid or the VAT number is empty',\n    'SERVICE_UNAVAILABLE': 'The VIES VAT service is unavailable, please try again later',\n    'MS_UNAVAILABLE': 'The VAT database of the requested member country is unavailable, please try again later',\n    'TIMEOUT': 'The request to VAT database of the requested member country has timed out, please try again later',\n    'SERVER_BUSY': 'The service cannot process your request, please try again later',\n    'UNKNOWN': 'Unknown error'\n  };\n\n  headers = {\n    'Content-Type': 'application/x-www-form-urlencoded',\n    'User-Agent': 'node-soap',\n    'Accept': 'text/html,application/xhtml+xml,application/xml,text/xml;q=0.9,*/*;q=0.8',\n    'Accept-Encoding': 'none',\n    'Accept-Charset': 'utf-8',\n    'Connection': 'close',\n    'Host': parsedUrl.hostname,\n    'SOAPAction': 'urn:ec.europa.eu:taxud:vies:services:checkVat/checkVat'\n  };\n\n  getReadableErrorMsg = function(faultstring) {\n    if (ERROR_MSG[faultstring] != null) {\n      return ERROR_MSG[faultstring];\n    } else {\n      return ERROR_MSG['UNKNOWN'];\n    }\n  };\n\n  parseSoapResponse = function(soapMessage) {\n    var hasFault, parseField, ret;\n    parseField = function(field) {\n      var err, match, regex;\n      regex = new RegExp(\"<\" + field + \">\\((\\.|\\\\s)\\*\\)</\" + field + \">\", 'gm');\n      match = regex.exec(soapMessage);\n      if (!match) {\n        err = new Error(\"Failed to parseField \" + field);\n        err.soapMessage = soapMessage;\n        throw err;\n      }\n      return match[1];\n    };\n    hasFault = soapMessage.match(/<soap:Fault>\\S+<\\/soap:Fault>/g);\n    if (hasFault) {\n      ret = {\n        faultCode: parseField('faultcode'),\n        faultString: parseField('faultstring')\n      };\n    } else {\n      ret = {\n        countryCode: parseField('countryCode'),\n        vatNumber: parseField('vatNumber'),\n        requestDate: parseField('requestDate'),\n        valid: parseField('valid') === 'true',\n        name: parseField('name'),\n        address: parseField('address').replace(/\\n/g, ', ')\n      };\n    }\n    return ret;\n  };\n\n  module.exports = exports = function(countryCode, vatNumber, timeout, callback) {\n    var options, req, xml;\n    if (typeof timeout === 'function') {\n      callback = timeout;\n      timeout = null;\n    }\n    if (indexOf.call(EU_COUNTRIES_CODES, countryCode) < 0 || !(vatNumber != null ? vatNumber.length : void 0)) {\n      return process.nextTick(function() {\n        return callback(new Error(ERROR_MSG['INVALID_INPUT']));\n      });\n    }\n    xml = soapBodyTemplate.replace('_country_code_placeholder_', countryCode).replace('_vat_number_placeholder_', vatNumber).replace('\\n', '').trim();\n    headers['Content-Length'] = Buffer.byteLength(xml, 'utf8');\n    options = {\n      host: parsedUrl.host,\n      method: 'POST',\n      path: parsedUrl.path,\n      headers: headers,\n      family: 4\n    };\n    req = http.request(options, function(res) {\n      var str;\n      res.setEncoding('utf8');\n      str = '';\n      res.on('data', function(chunk) {\n        return str += chunk;\n      });\n      return res.on('end', function() {\n        var data, err, ref;\n        try {\n          data = parseSoapResponse(str);\n        } catch (error) {\n          err = error;\n          return callback(err);\n        }\n        if ((ref = data.faultString) != null ? ref.length : void 0) {\n          err = new Error(getReadableErrorMsg(data.faultString));\n          err.code = data.faultCode;\n          return callback(err);\n        }\n        return callback(null, data);\n      });\n    });\n    if (timeout) {\n      req.setTimeout(timeout, function() {\n        return req.abort();\n      });\n    }\n    req.on('error', callback);\n    req.write(xml);\n    return req.end();\n  };\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}